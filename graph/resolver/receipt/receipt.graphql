scalar Date
scalar DateTime
scalar UUID

type Receipt {
  id: UUID!
  receipt_name: String!
  recipient_name: String!
  recipient_phone: Int!
  recipient_email: String
  recipient_address: String
  receipt_no: String!
  user_id: ID!
  date: Date!
  total_amount: Float
  sub_total_amount: Float
  tax_amount: Float
  payment_method: String!
  payment_note: String
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime
  Services: [Service]
}

input CreateReceipt {
  receipt_name: String!
  recipient_name: String!
  recipient_phone: Int!
  recipient_email: String
  recipient_address: String
  receipt_no: String!
  payment_method: String!
  payment_note: String
  user_id: ID!
  date: Date!
  total_amount: Float
}

input UpdateReceipt {
  id: UUID!
  receipt_name: String
  recipient_name: String
  recipient_phone: Int
  recipient_email: String
  recipient_address: String
  receipt_no: String
  payment_method: String
  payment_note: String
  user_id: ID
  date: Date
  total_amount: Float
}

type ReceiptEdge {
  cursor: String!
  node: Receipt!
}

type ReceiptConnection {
  edges: [ReceiptEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}
