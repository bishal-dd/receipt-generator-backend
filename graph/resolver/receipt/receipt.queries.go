package receipt

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"

	"github.com/bishal-dd/receipt-generator-backend/graph/model"
	"github.com/bishal-dd/receipt-generator-backend/pkg/db"
)

type ReceiptResolver struct{}

func (r *ReceiptResolver) Receipts(ctx context.Context) ([]*model.Receipt, error) {
	db := db.Init()
	var receipts []*model.Receipt
	if err := db.Find(&receipts).Error; err != nil {
		return nil, err
	}

	return receipts, nil
}

func (r *ReceiptResolver) Receipt(ctx context.Context, id string) (*model.Receipt, error) {
	db := db.Init()
	var receipt model.Receipt
	if err := db.Where("id = ?", id).First(&receipt).Error; err != nil {
		return nil, err
	}
	return &receipt, nil
}
