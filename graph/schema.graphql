type Query {
  users(first: Int, after: String): UserConnection!
  user(id: ID!): User
  receipts(first: Int, after: String): ReceiptConnection!
  receipt(id: ID!): Receipt
  profileByUserId(userId: String!): Profile
  profile(id: ID!): Profile
  serviceByReceiptId(receiptId: String!): [Service]
  service(id: ID!): Service
}

type Mutation {
  createUser(input: CreateUser!): User!
  deleteUser(id: ID!): Boolean!
  createReceipt(input: CreateReceipt!): Receipt!
  updateReceipt(input: UpdateReceipt!): Receipt!
  deleteReceipt(id: ID!): Boolean!
  createProfile(input: CreateProfile!): Profile!
  updateProfile(input: UpdateProfile!): Profile!
  deleteProfile(id: ID!): Boolean!
  createService(input: CreateService!): Service!
  updateService(input: UpdateService!): Service!
  deleteService(id: ID!): Boolean!
  createReceiptPDFGenerator(input: CreateReceiptPDFGenerator!): Boolean!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}
